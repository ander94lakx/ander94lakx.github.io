<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>analysis on Walk on the Byte Side</title><link>https://ander94lakx.github.io/tags/analysis/</link><description>Recent content in analysis on Walk on the Byte Side</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><managingEditor>ander@protonmail.com (Ander Granado)</managingEditor><webMaster>ander@protonmail.com (Ander Granado)</webMaster><lastBuildDate>Wed, 26 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ander94lakx.github.io/tags/analysis/index.xml" rel="self" type="application/rss+xml"/><item><title>Análisis de malware (I): cómo empezar a analizar malware</title><link>https://ander94lakx.github.io/blog/2022-01-26-malware-analysis-1/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><author>ander@protonmail.com (Ander Granado)</author><guid>https://ander94lakx.github.io/blog/2022-01-26-malware-analysis-1/</guid><description>Estamos rodeados por malware. Todo el mundo ha tenido alguna vez un problema con algún tipo de virus o al menos conoce a alguien que lo haya tenido, al igual que conoce o trabaja en alguna empresa a la que le hayan atacado.
Personalmente, el malware me parece fascinante. Lo que me fascina es la eficacia que estos tienen. Son cuidadosamente diseñados para cumplir con su labor y hay ejemplos tan sofisticados que es alucinante ver cómo a alguien se le ha podido ocurrir programar algo de esa manera para explotar una vulnerabilidad o utilizar ciertos tipos de mecanismos de evasión.</description><content>&lt;p>Estamos rodeados por malware. Todo el mundo ha tenido alguna vez un problema con algún tipo de virus o al menos conoce a alguien que lo haya tenido, al igual que conoce o trabaja en alguna empresa a la que le hayan atacado.&lt;/p>
&lt;p>Personalmente, el malware me parece fascinante. Lo que me fascina es la eficacia que estos tienen. Son cuidadosamente diseñados para cumplir con su labor y hay ejemplos tan sofisticados que es alucinante ver cómo a alguien se le ha podido ocurrir programar algo de esa manera para explotar una vulnerabilidad o utilizar ciertos tipos de mecanismos de evasión.&lt;/p>
&lt;p>Cada vez que veo una noticia de un nuevo ransomware, troyano o malware de algún tipo, siento curiosidad por saber como funciona. Suelo ojear los informes técnicos que salen de los ataques más sonados en búsqueda de más información y me quedo alucinado por los informes de los analistas. En parte, por las características de los casos que analizan y las formas en las que funcionan los malware, pero, por otra parte, por como son capaces de obtener toda esa información.&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/wannacry.png" alt="Wannacry" title="Wannacry en acción">&lt;/p>
&lt;p>Este tipo de informes son realizados por analistas de malware. A veces están dentro de los equipos de DFIR de una empresa, otras son organizaciones gubernamentales o militares y otras veces es un hacker cualquiera posteando en su blog sobre una muestra con la que está jugando. Lo que está claro es que cogen una muestra de un malware y la analizan. Es un campo fascinante que me llama mucho la atención porque mezcla disciplinas que me parecen muy interesantes. Mezcla informática forense con ingeniería inversa y conocimientos a bajo nivel de los sistemas. Es como el plato combinado perfecto.&lt;/p>
&lt;p>Últimamente he estado aprendiendo sobre esta area. Incluso hace no mucho realicé &lt;a href="https://github.com/ander94lakx/TFM_Doc">mi TFM&lt;/a> sobre ello. Para poder recolectar las cosas interesantes que he ido aprendiendo, he decidido escribir una serie de posts (y con ello retomar un poco este blog) sobre el proceso y algunas de las técnicas que se usan. Nno soy un experto en el tema, pero espero poder ayudar a quien lo lea y, por que no, a mi mismo al organizarme las ideas.&lt;/p>
&lt;h2 id="qué-es-el-análisis-de-malware">¿Qué es el análisis de malware?&lt;/h2>
&lt;p>El análisis de malware consiste en todas estas técnicas y procesos que permiten obtener información sobre cómo funciona un malware. El funcionamiento de cualquier programa, y por ello también el de un malware, depende de su código. Si se tuviera el código de un malware simplemente bastaría con examinarlo para conocer cómo funciona. En este caso no va a haber esa suerte. Lo mejor que podremos tener es algún tipo de código ofuscado o compilado, normalmente un binario.&lt;/p>
&lt;p>Hay muchos tipos de malware. Un malware puede ser ese pedacito de JavaScript que se te ha colado en esa web con el objetivo de minar crypto para alguien y, a cambio de ello, convertir tu ordenador en un radiador. Un malware también puede ser ese .exe que te han colado como activador para tu Office pirata. Según el tipo de malware, se analizará de una manera u otra.&lt;/p>
&lt;p>Yo en este caso me voy a centrar en malware para Windows y para arquitecturas x86 y x86_64. Si se piensa en ejemplos de malware, probablemente lo que más venga a la cabeza sean ejemplos para este tipo de sistemas y son los más comunes de encontrar.&lt;/p>
&lt;p>En esencia, analizar malware consiste en comprender el funcionamiento de un programa, pero sin tener acceso directamente al código fuente. Es como tener una caja negra e intentar entender como funciona: puedes abrirle las tripas para intentar sacar el código, puedes lanzarla y ver como interactúa dentro de un sistema o puedes coger y analizar la forma de la caja para obtener pistas sobre ella.&lt;/p>
&lt;h2 id="qué-se-hace-para-analizar-un-malware">¿Qué se hace para analizar un malware?&lt;/h2>
&lt;p>Hay diferentes procesos y técnicas para analizar malware. Hay incluso procesos y metodologías que se pueden seguir y que estandarizan la forma de hacerlo. Aun con ello, analizar malware consiste, en esencia, en sacar información sobre él: cómo funciona, qué mecanismos tiene para evadirse, cómo y con quién ese comunica, qué mecanismos usa para persistir o propagarse, etc.&lt;/p>
&lt;p>Las técnicas que se utilizan para sacar esa información son diversas, pero todas ellas se pueden dividir, a grandes rasgos, en las siguientes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Análisis estático&lt;/strong>: consiste en analizar información sobre el malware sin analizar su código ni ejecutarlo: metadatos, firmas, formato y secciones del binario, etc.&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/pe-bear.png" alt="PE-bear" title="Análisis estático con PE-bear">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Análisis dinámico&lt;/strong>: también llamado análisis de comportamiento, consiste en analizar la muestra mientras se ejecuta: ficheros con los que interactúa, llamadas al sistema, trafico de red, cambios en el registro, etc.&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/wireshark.png" alt="Wireshark" title="Captura de tráfico de red con Wireshark">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>Análisis de código&lt;/em>: como su nombre indica, consiste en observar el código y se distingue en dos tipos:&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/ghidra.png" alt="Ghidra" title="Ghidra para análisis de código">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Análisis estático de código&lt;/strong>: analizar el código sin ejecutarlo.&lt;/li>
&lt;li>&lt;strong>Análisis dinámico de código&lt;/strong>: analizar el código mientras se ejecuta, es decir, depurarlo.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Como se puede ver, todo lo estático esta relacionado con analizar sin ejecutar, mientras que la parte dinámica tiene que tener el malware en ejecución. También se puede distinguir entre técnicas en función de si se analiza el código o no. Al analizar una muestra, lo normal es que se realicen algunos tipos de tareas antes que otras. Las técnicas de análisis estático suelen ser fáciles de realizar y suelen hacerse al principio. Por el contrario, analizar el código es una tarea tediosa y suele hacerse más adelante, Aunque todo ello depende del proceso y del analista.&lt;/p>
&lt;h2 id="como-empiezo-a-analizar-malware">¿Como empiezo a analizar malware?&lt;/h2>
&lt;p>Aquí no hay discusión, para analizar malware necesitas un entorno aislado. Coger malware y meterlo en tu ordenador para comenzar a trastear con él es mala idea. Si nadie quiere que se le cuele malware en su equipo sin querer, como para hacerlo a propósito.&lt;/p>
&lt;p>La mejor forma para tener un entorno aislado es hacer uso de una máquina virtual. Se puede usar lo que se quiera (VirtualBox, VMWare, &amp;hellip;). En mi caso soy más de usar VirtualBox, pero cualquiera es perfectamente válido. Una vez se tenga el software de virtualización, hace falta crear obtener una ISO con Windows, crear la maquina virtual, cargar la imagen en&amp;hellip; ¿O quizás no?.&lt;/p>
&lt;p>Es cierto que uno mismo puede buscar la ISO, crear la máquina e instalar Windows en ella, pero hay una forma más sencilla de obtener una VM con Windows, y es descargarla directamente de internet. La mejor opción son las VM que ofrece Microsoft para desarrolladores. Hay varias opciones. Se puede optar por una maquina que tiene un &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/">entorno de desarrollo completo&lt;/a> (es más grande, pero si se quiere ademas usarla para desarrollar malware puede estar bien), o las máquinas virtuales que tienen &lt;a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/">para testear aplicaciones&lt;/a> en Edge, más ligeras y, en mi opinión, la mejor opción. De estas últimas, ademas de Windows 10, también hay versiones para Windows 7 y Windows 8, que para malwares viejos puede ser interesante. Hay versiones para los software más famosos, como VirtualBox o VMWare, así que con seleccionar la version deseada, bajarse el archivo y cargarlo en el software de virtualización necesario es más que suficiente.&lt;/p>
&lt;h3 id="qué-herramientas-necesito-para-analizar-malware">¿Qué herramientas necesito para analizar malware?&lt;/h3>
&lt;p>Con una máquina virtual ya lista solo hace falta prepararla con las herramientas necesarias para analizar malware. Hay una gran cantidad de herramientas para analizar malware. Algunas como IDA o Ghidra sonarán a muchos. Al principio es normal no tener ni idea de cuales instalar. Lo mejor para estos casos es hacer uso de &lt;a href="https://github.com/mandiant/flare-vm">FLARE-VM&lt;/a>, una herramienta para instalar y mantener actualizados todo un conjunto de herramientas para analizar malware.&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/flare-install.png" alt="Flare install" title="Proceso de instalación de FLARE-VM">&lt;/p>
&lt;p>Con usar esta herramienta sobre nuestra máquina y dejarle un rato para que instale todo, tendremos una maquina con todas las herramientas que se necesitan. Es la mejor opción, sobre todo, para probar todo tipo de herramientas y ya, en un futuro, poder crearte tu propio laboratorio solo con las herramientas que te gusten. La única desventaja que tiene usar algo como FLARE-VM es que nos va a engordar nuestra VM considerablemente (unos 60GB de VM ya te deja). A parte de eso, es tan sencillo como seguir los &lt;a href="https://github.com/mandiant/flare-vm#windows-10-installation">pasos de instalación&lt;/a> indicados en su repositorio.&lt;/p>
&lt;p>También existen otro tipo de herramientas o directamente distribuciones que vienen ya con todo listo para usar. Una de mis favoritas es &lt;a href="https://remnux.org/">Remnux&lt;/a>, una distribución linux que viene prácticamente con todo. Tiene herramientas hasta para analizar malware para Windows. El único problema que tiene para analizar malware para Windows es que no vamos a poder ejecutarlo sobre esa máquina. Aun asi, es muy recomendable también.&lt;/p>
&lt;p>&lt;img src="https://ander94lakx.github.io/static/images/remnux.png" alt="Remnux" title="Distribucion Remnux">&lt;/p>
&lt;p>Si, aun así quieres instalar las herramientas a mano, te dejo algunas de las herramientas que me gustan a mí. Hay muchas mas, y esto depende de gustos y necesidades, pero a mí, algunas de las que me gustan son:&lt;/p>
&lt;ul>
&lt;li>Para análisis estático:
&lt;ul>
&lt;li>&lt;a href="https://www.winitor.com/">PEstudio&lt;/a> y &lt;a href="https://github.com/horsicq/Detect-It-Easy">DIE&lt;/a> para analizar binarios.&lt;/li>
&lt;li>&lt;a href="https://ssdeep-project.github.io/ssdeep/index.html">ssdeep&lt;/a> y &lt;a href="https://virustotal.github.io/yara/">YARA&lt;/a> (y las &lt;a href="https://github.com/Yara-Rules/rules">Yara-Rules&lt;/a>) para clasificar y buscar malware similar.&lt;/li>
&lt;li>&lt;a href="https://github.com/mandiant/capa">capa&lt;/a> para obtener de un vistazo pistas sobre las capacidades de una muestra.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Para análisis de código:
&lt;ul>
&lt;li>&lt;a href="https://hex-rays.com/ida-free/">IDA&lt;/a> para reversing y analizar código.&lt;/li>
&lt;li>&lt;a href="https://ghidra-sre.org/">Ghidra&lt;/a> para cuando no puedas decompilar las muestras en IDA porque no te sobran miles de euros.&lt;/li>
&lt;li>&lt;a href="https://x64dbg.com/">x64dbg&lt;/a> para &lt;del>crackear videojuegos&lt;/del> depurar muestras.
&lt;ul>
&lt;li>Mejora mucho con &lt;a href="https://github.com/x64dbg/ScyllaHide">ScyllaHide&lt;/a> y &lt;a href="https://github.com/ThunderCls/xAnalyzer">xAnalizer&lt;/a>, dos plugins indispensables.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Para análisis de comportamiento:
&lt;ul>
&lt;li>&lt;a href="https://processhacker.sourceforge.io/">Process Hacker&lt;/a> y las &lt;a href="https://docs.microsoft.com/en-us/sysinternals/">SysInternals&lt;/a> de Windows, en especial &lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procmon">Process Monitor&lt;/a> para poder monitorizar y analizar procesos y eventos del sistema.
&lt;ul>
&lt;li>Los PML de Process Monitor son tu mayor aliado.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://sourceforge.net/projects/regshot/">Regshot&lt;/a> para capturar y comparar cambios en el registro.&lt;/li>
&lt;li>&lt;a href="https://www.wireshark.org/">Wireshark&lt;/a> para capturar y analizar tráfico de red.&lt;/li>
&lt;li>&lt;a href="https://belkasoft.com/es/bat">Belkasoft Acquisition Tool&lt;/a> para volcados de memoria&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Otros:
&lt;ul>
&lt;li>&lt;a href="https://mh-nexus.de/en/hxd/">HxD&lt;/a> como editor hexadecimal.&lt;/li>
&lt;li>Una taza con café al lado.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="y-ahora-qué">¿Y ahora qué?&lt;/h2>
&lt;p>Con todo listo y preparado, solo queda buscar una muestra para empezar a jugar. Para no abrumarse demasiado, lo mejor es optar por muestras de malware que ya hayan sido analizadas y no sean demasiado complejas. En repositorios como &lt;a href="https://github.com/ytisf/theZoo">TheZoo&lt;/a> hay muestras de malwares famosos. También se puede buscar alguno concreto en plataformas como &lt;a href="https://bazaar.abuse.ch/">MalwareBazaar&lt;/a>.&lt;/p>
&lt;p>Otra opción consiste en probar este tipo de herramientas y técnicas con crackmes. Un crackme es el equivalente a una máquina de Hack The Box o TryHackMe pero para reversing. No son específicos para analizar malware, pero las técnicas que se usan con, en esencia, las mismas. Webs como &lt;a href="https://crackmes.one/">crackmes.one&lt;/a> tienen muchos crackmes de diferentes dificultades con los que practicar.&lt;/p>
&lt;p>En los próximos posts explicare algunas de estas técnicas sobre una muestra de malware real para poder ver como se aplican las diferentes técnicas y como se usan las herramientas.&lt;/p>
&lt;p>Happy hacking!&lt;/p></content></item></channel></rss>